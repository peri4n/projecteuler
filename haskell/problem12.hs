-- The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
-- The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- What is the value of the first triangle number to have over five hundred divisors?

import Data.List

primes :: [Int]
primes = 2 : filter (null . tail . primeFactors) [3,5..]
 
primeFactors :: Int -> [Int]
primeFactors n = factor n primes
  where
    factor n (p:ps) 
        | p*p > n        = [n]
        | n `mod` p == 0 = p : factor (n `div` p) (p:ps)
        | otherwise      =     factor n ps

solution :: Int
solution = head $ filter ((> 500) . nDivisors) triangleNumbers
  where nDivisors n = product $ map ((+1) . length) (group (primeFactors n))
        triangleNumbers = scanl1 (+) [1..]

main :: IO ()
main = (putStrLn . show ) solution
